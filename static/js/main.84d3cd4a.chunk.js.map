{"version":3,"sources":["components/UserCard/index.jsx","services/api.js","App.js","index.js"],"names":["UserCard","userData","height","display","flexDirection","borderRadius","src","avatar_url","alt","width","mt","fontWeight","as","lineHeight","isTruncated","name","textAlign","location","px","colorScheme","public_repos","company","color","letterSpacing","fontSize","textTransform","bio","api","axios","create","baseURL","App","numOfSearchs","useRef","useState","inputValue","setInputValue","setUserData","hasUser","setHasUser","isLoading","setIsLoading","useEffect","a","inputBtn","document","getElementById","click","fetchFirstUser","handleSubmit","event","preventDefault","current","get","res","data","console","log","templateRows","gap","marginTop","thickness","speed","emptyColor","size","onSubmit","e","marginBottom","in","placeholder","margin","value","onChange","target","id","onClick","ReactDOM","render","StrictMode"],"mappings":"oQAUO,SAASA,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SAEvB,OAEI,cAAC,IAAD,CAAQC,OAAO,OAAf,SACI,eAAC,IAAD,CAAQC,QAAQ,OAAOC,cAAc,SAArC,UACI,cAAC,IAAD,CACIC,aAAa,QACbC,IAAKL,EAASM,WACdC,IAAI,uBACJC,MAAM,UAEV,cAAC,IAAD,CACIC,GAAG,IACHC,WAAW,WACXC,GAAG,KACHC,WAAW,QACXC,aAAW,EALf,SAMKb,EAASc,OAGd,cAAC,IAAD,CAAKN,MAAM,MAAMO,UAAU,SAA3B,SACKf,EAASgB,WAGd,eAAC,IAAD,CAAOZ,aAAa,OAAOa,GAAG,IAAIC,YAAY,OAA9C,UACKlB,EAASmB,aADd,0BAKCnB,EAASoB,SACN,cAAC,IAAD,CACIC,MAAM,WACNX,WAAW,WACXY,cAAc,OACdC,SAAS,KACTC,cAAc,YALlB,SAOKxB,EAASoB,UAIlB,cAAC,IAAD,CAAKZ,MAAM,MAAMO,UAAU,SAA3B,SACKf,EAASyB,W,YCnDjBC,E,OAAMC,EAAMC,OAAO,CAC5BC,QAAS,iCC+FEC,MAxFf,WAEE,IAAMC,EAAeC,iBAAO,GAFf,EAIuBC,mBAAS,IAJhC,mBAINC,EAJM,KAIMC,EAJN,OAKmBF,mBAAS,IAL5B,mBAKNjC,EALM,KAKIoC,EALJ,OAMiBH,oBAAS,GAN1B,mBAMNI,EANM,KAMGC,EANH,OAOqBL,oBAAS,GAP9B,mBAONM,EAPM,KAOKC,EAPL,KASbC,qBAAU,YAEY,uCAAG,4BAAAC,EAAA,6DACfC,EAAWC,SAASC,eAAe,UACzCV,EAAc,YAFO,SAGfQ,EAASG,QAHM,2CAAH,qDAMpBC,KACC,IAEH,IAIMC,EAAY,uCAAG,WAAgBC,GAAhB,iBAAAP,EAAA,yDACnBO,EAAMC,iBAJNnB,EAAaoB,UAObX,GAAa,GACM,KAAfN,EALe,0EASCR,EAAI0B,IAAJ,WAAYlB,IATb,OASXmB,EATW,OAUTC,EAASD,EAATC,KACRlB,EAAYkB,GACZd,GAAa,GACbF,GAAW,GAbM,kDAejBiB,QAAQC,IAAR,MAfiB,QAiBnBrB,EAAc,IAjBK,0DAAH,sDAoBlB,OACE,eAAC,IAAD,CAAMsB,aAAa,YAAYC,IAAK,EAApC,UAEGrB,GAAW,cAACtC,EAAD,CAAUC,SAAUA,KAC9BqC,GAAWE,GACX,cAAC,IAAD,CAAQoB,UAAU,QAAlB,SACE,cAAC,IAAD,CACEC,UAAU,MACVC,MAAM,QACNC,WAAW,WACXzC,MAAM,WACN0C,KAAK,SAQX,sBAAMC,SAAU,SAAAC,GAAC,OAAIjB,EAAaiB,IAAIzD,MAAM,OAA5C,SACE,eAAC,IAAD,CACE0D,aAAa,OADf,UAEE,cAAC,IAAD,CACEC,GAAG,QACHC,YAAY,2BACZ5D,MAAM,MACN6D,OAAO,IACPC,MAAOpC,EACPqC,SAAU,SAAAN,GAAC,OAAI9B,EAAc8B,EAAEO,OAAOF,UAExC,eAAC,IAAD,CACEG,GAAG,SACHC,QAAS,SAAAT,GAAC,OAAIjB,EAAaiB,IAC3B/C,YAAY,QAHd,2BAGkCa,EAAaoB,oB,wBClFzDwB,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJjC,SAASC,eAAe,W","file":"static/js/main.84d3cd4a.chunk.js","sourcesContent":["// Foto do perfil ✔ \n// Nome ✔ \n// Empresas que faz parte (Companies) ✔ \n// Redes Sociais\n// Quantidade de Repositórios ✔ \n// Bio ✔ \n// Localização ✔\n\nimport { Badge, Box, Center, Image } from \"@chakra-ui/react\"\n\nexport function UserCard({ userData }) {\n\n    return (\n\n        <Center height=\"80vh\" >\n            <Center display=\"flex\" flexDirection=\"column\">\n                <Image\n                    borderRadius=\"280px\"\n                    src={userData.avatar_url}\n                    alt=\"user profile picture\"\n                    width=\"280px\" />\n\n                <Box\n                    mt=\"5\"\n                    fontWeight=\"semibold\"\n                    as=\"h4\"\n                    lineHeight=\"tight\"\n                    isTruncated >\n                    {userData.name}\n                </Box>\n\n                <Box width=\"80%\" textAlign=\"center\">\n                    {userData.location}\n                </Box>\n\n                <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                    {userData.public_repos} public repositories\n                </Badge>\n\n\n                {userData.company && (\n                    <Box\n                        color=\"gray.500\"\n                        fontWeight=\"semibold\"\n                        letterSpacing=\"wide\"\n                        fontSize=\"xs\"\n                        textTransform=\"uppercase\"\n                    >\n                        {userData.company}\n                    </Box>\n                )}\n\n                <Box width=\"80%\" textAlign=\"center\">\n                    {userData.bio}\n                </Box>\n\n            </Center>\n        </Center>\n\n    );\n}\n\n","import axios from \"axios\"\n\nexport const api = axios.create({\n    baseURL: \"https://api.github.com/users\",\n})","// useState ✔ \n// useRef ✔ \n// useEffect ✔\n\nimport { Button, Center, Grid, Input, Spinner } from \"@chakra-ui/react\"\nimport { useEffect, useRef, useState } from 'react';\n\nimport { UserCard } from './components/UserCard';\nimport { api } from './services/api';\n\nfunction App() {\n\n  const numOfSearchs = useRef(1)\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [userData, setUserData] = useState({});\n  const [hasUser, setHasUser] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n\n    const fetchFirstUser = async function () {\n      const inputBtn = document.getElementById(\"BUTTON\")\n      setInputValue(\"phsb5321\")\n      await inputBtn.click()\n    }\n\n    fetchFirstUser()\n  }, [])\n\n  const handleNumOfSearchs = () => {\n    numOfSearchs.current++;\n  };\n\n  const handleSubmit = async function (event) {\n    event.preventDefault()\n\n    handleNumOfSearchs()\n    setIsLoading(true);\n    if (inputValue === \"\")\n      return\n\n    try {\n      const res = await api.get(`/${inputValue}`)\n      const { data } = res\n      setUserData(data)\n      setIsLoading(false)\n      setHasUser(true)\n    } catch (error) {\n      console.log(error)\n    }\n    setInputValue(\"\")\n  }\n\n  return (\n    <Grid templateRows=\"80vh 10vh\" gap={6}>\n\n      {hasUser && <UserCard userData={userData} />}\n      {!hasUser && isLoading &&\n        <Center marginTop=\"15rem\">\n          <Spinner\n            thickness=\"4px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.200\"\n            color=\"blue.500\"\n            size=\"xl\"\n          />\n        </Center>\n      }\n\n\n\n      {/* INPUT FORM || TODO -> CREATE COMPONENT */}\n      <form onSubmit={e => handleSubmit(e)} width=\"100%\">\n        <Center\n          marginBottom=\"5rem\">\n          <Input\n            in=\"INPUT\"\n            placeholder=\"Search for a github user\"\n            width=\"70%\"\n            margin=\"1\"\n            value={inputValue}\n            onChange={e => setInputValue(e.target.value)}\n          />\n          <Button\n            id=\"BUTTON\"\n            onClick={e => handleSubmit(e)}\n            colorScheme=\"green\"> Submit n° {numOfSearchs.current}\n          </Button>\n        </Center>\n      </form>\n\n\n    </Grid>\n\n  );\n}\n\nexport default App;\n","import App from './App';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}